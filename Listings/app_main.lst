C51 COMPILER V9.59.0.0   APP_MAIN                                                          12/23/2024 00:05:48 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE APP_MAIN
OBJECT MODULE PLACED IN .\Objects\app_main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE App\app_main.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\App;.\divers
                    -;.\main) DEBUG PRINT(.\Listings\app_main.lst) TABS(2) OBJECT(.\Objects\app_main.obj)

line level    source

   1          #include "app_main.h"
   2          
   3          char *USER_DEVICEDESC = NULL;
   4          char *USER_PRODUCTDESC = NULL;
   5          char *USER_STCISPCMD = "@STCISP#"; // 可以自定义
   6          char LCDstr[15];
   7          
   8          uint weight = 0;            // 显示重量
   9          uint weight_tare = 0;       // 皮重量
  10          uint weight_tare_after = 0; // 去皮后重量
  11          uint weight_count = 0;      // 计数重量
  12          ulong weight_base = 0;      // 基准重量
  13          ulong weight_neg_t = 0;     // 重量负值时间
  14          
  15          uchar Key_cnt = 0;   // 按键消抖计数值
  16          BOOL Key1_event = 0; // 按键事件
  17          BOOL Key2_event = 0; // 按键事件
  18          BOOL Key3_event = 0; // 按键事件
  19          BOOL Key4_event = 0; // 按键事件
  20          
  21          uint Item_Count = 0; // 计数
  22          
  23          uint Page = 1; // 页面
  24          
  25          /**
  26           * @brief 初始化I/O端口，将模式寄存器设置为0。
  27           *
  28           * 此函数将所有模式寄存器（P0M0, P0M1, P1M0, P1M1, P2M0, P2M1,
  29           * P4M0, P4M1, P5M0, P5M1, P6M0, P6M1, P7M0, P7M1）设置为0，
  30           * 将所有引脚配置为通用I/O，无特殊功能。
  31           */
  32          void IO_Init()
  33          {
  34   1          P0M0 = 0x00;
  35   1          P0M1 = 0x00;
  36   1          P1M0 = 0x00;
  37   1          P1M1 = 0x00;
  38   1          P2M0 = 0x00;
  39   1          P2M1 = 0x00;
  40   1          P4M0 = 0x00;
  41   1          P4M1 = 0x00;
  42   1          P5M0 = 0x00;
  43   1          P5M1 = 0x00;
  44   1          P6M0 = 0x00;
  45   1          P6M1 = 0x00;
  46   1          P7M0 = 0x00;
  47   1          P7M1 = 0x00;
  48   1      }
  49          
  50          /**
  51           * @brief 任务一
  52           * 显示个人信息在LCD1602屏幕上
  53           *
  54           * 该函数LCD1602屏幕上显示个人信息。
C51 COMPILER V9.59.0.0   APP_MAIN                                                          12/23/2024 00:05:48 PAGE 2   

  55           * 首先显示学号“20235603023185”，然后延迟500毫秒。
  56           * 接着显示姓名“LinZhiKai”，再延迟2000毫秒。
  57           * 最后清除屏幕显示。
  58           */
  59          void Display_PersonInfo()
  60          {
  61   1          sprintf(LCDstr, "%s", "20235603023185");
  62   1          LCD1602_Display_String(1, 2, LCDstr);
  63   1          DelayTick(500);
  64   1          sprintf(LCDstr, "%s", "LinZhiKai");
  65   1          LCD1602_Display_String(2, 4, LCDstr);
  66   1          DelayTick(2000);
  67   1          LCD1602_Wr_Command(0x01);
  68   1      }
  69          /**
  70           * @brief 任务三
  71           * 显示重量信息在LCD1602屏幕上
  72           *
  73           * 该函数LCD1602屏幕上显示重量信息。
  74           * 首先显示标志和单位“Weight :”，“g”。
  75           * 接着显示重量值“weight”，延迟500毫秒。
  76           * 如果重量值为0，则清除重量值。
  77           */
  78          void LCD_Display_Weight()
  79          {
  80   1      
  81   1          if (weight_neg_t + Weight_poll_time < Get_Tikc())
  82   1          {
  83   2              weight_neg_t = Get_Tikc();
  84   2              LCD1602_Display_String(1, 1, "Pi :");                            // 显示标志
  85   2              LCD1602_Display_String(1, 10, "g");                              // 显示单位
  86   2              sprintf(LCDstr, "%4d", weight_tare);                             // 格式化字符串
  87   2              LCD1602_Display_String(1, 5, LCDstr);                            // LCD显示去皮重量值
  88   2              LCD1602_Display_String(2, 1, "Weight :");                        // 显示标志
  89   2              LCD1602_Display_String(2, 15, "g");                              // 显示单位
  90   2              weight_tare_after = read_weight(400, weight_base) - weight_tare; // 读取重量
  91   2              printf("weight_base = %lu\n", weight_base);                      // Log打印基准重量
  92   2              printf("weight = %d\n", weight_tare_after);                      // Log打印重量
  93   2              sprintf(LCDstr, "%4d", weight_tare_after);                       // 格式化字符串
  94   2              LCD1602_Display_String(2, 10, LCDstr);                           // LCD显示重量值
  95   2              if (weight_tare_after <= 0)
  96   2              {
  97   3                  LCD1602_Display_String(2, 10, "   0"); // 清除重量值
  98   3              }
  99   2          }
 100   1      }
 101          /**
 102           * @brief 任务三
 103           * 去皮
 104           * 该函数去皮。
 105           */
 106          void tare_weight()
 107          {
 108   1      
 109   1          if (Key3_event == 1 && Page == 1)
 110   1          {
 111   2              weight_tare = read_weight(400, weight_base); // 读取重量
 112   2              printf("weight_tare = %d\n", weight_tare);   // Log打印去皮重量
 113   2          }
 114   1      }
 115          
 116          void Count_weight()
C51 COMPILER V9.59.0.0   APP_MAIN                                                          12/23/2024 00:05:48 PAGE 3   

 117          {
 118   1          if (Key1_event == 1 && Page == 2)
 119   1          {
 120   2              weight_count = weight;
 121   2          }
 122   1      }
 123          
 124          /**
 125           * @brief 任务四
 126           * 显示计数信息在LCD1602屏幕上
 127           *
 128           * 该函数LCD1602屏幕上显示计数信息。
 129           * 首先显示标志“Count :”。
 130           * 接着显示计数值“Item_Count”。
 131           * 如果计数值大于100，则计数值为100。
 132           * 最后显示单位“g”。
 133           */
 134          void LCD_Display_Count()
 135          {
 136   1          LCD1602_Display_String(2, 1, "Weight :"); // 显示标志
 137   1          LCD1602_Display_String(2, 15, "g");       // 显示单位
 138   1          LCD1602_Display_String(1, 1, "Count :");  // 显示标志
 139   1          LCD1602_Display_String(1, 12, "x");       // 显示标志
 140   1          LCD1602_Display_String(1, 16, "g");       // 显示单位
 141   1      
 142   1          weight = read_weight(400, weight_base); // 读取重量
 143   1          sprintf(LCDstr, "%4d", weight);         // 格式化字符串
 144   1          LCD1602_Display_String(2, 10, LCDstr);  // LCD显示重量值
 145   1          if (weight <= 0)
 146   1          {
 147   2              LCD1602_Display_String(2, 10, "   0"); // 清除重量值
 148   2          }
 149   1          sprintf(LCDstr, "%3d", weight_count);  // 格式化字符串
 150   1          LCD1602_Display_String(1, 13, LCDstr); // 显示个重量值
 151   1          if (weight_count == 0)
 152   1          {
 153   2              LCD1602_Display_String(1, 13, "  0"); // 清除重量值
 154   2          }
 155   1          if (weight_count == 0) // 判断计数值是否为0
 156   1          {
 157   2              Item_Count = 0;
 158   2          }
 159   1          else
 160   1          {
 161   2              Item_Count = weight / weight_count; // 计数
 162   2          }
 163   1          printf("weight = %d\n", weight);             // Log打印重量值
 164   1          printf("weight_count = %d\n", weight_count); // Log打印计数重量值
 165   1          printf("Item_Count = %d\n", Item_Count);     // Log打印计数值
 166   1          if (Item_Count >= 100)
 167   1          {
 168   2              Item_Count = 100;
 169   2          }
 170   1          sprintf(LCDstr, "%3d", Item_Count);   // 格式化字符串
 171   1          LCD1602_Display_String(1, 8, LCDstr); // LCD显示计数值
 172   1          if (Item_Count == 0)
 173   1          {
 174   2              LCD1602_Display_String(1, 8, "  0"); // 清除计数值
 175   2          }
 176   1      }
 177          
 178          void Page_Switching()
C51 COMPILER V9.59.0.0   APP_MAIN                                                          12/23/2024 00:05:48 PAGE 4   

 179          {
 180   1          if (Key4_event == 1)
 181   1          {
 182   2              LCD1602_Wr_Command(0x01);
 183   2              Page++;
 184   2              if (Page > 2)
 185   2              {
 186   3                  Page = 1;
 187   3              }
 188   2          }
 189   1      }
 190          void app_main()
 191          {
 192   1          // 扩展寄存器(XFR)访问使能
 193   1          P_SW2 |= 0x80;
 194   1          IO_Init(); // 初始化I/O端口
 195   1      
 196   1          usb_init();    // USB初始化
 197   1          Timer0_Init(); // 定时器0初始化
 198   1          EA = 1;        // 开启总中断
 199   1      
 200   1          while (DeviceState != DEVSTATE_CONFIGURED) // 等待USB配置完成
 201   1          {
 202   2          }
 203   1          LCD1602_Init();                   // 初始化LCD1602
 204   1          Display_PersonInfo();             // 显示个人信息
 205   1          weight_base = read_weight_base(); // 读取基准重量
 206   1          while (1)
 207   1          {
 208   2              Key1_event = keyScan(&Key_cnt, Key1); // 按键扫描
 209   2              Key2_event = keyScan(&Key_cnt, Key2); // 按键扫描
 210   2              Key3_event = keyScan(&Key_cnt, Key3); // 按键扫描
 211   2              Key4_event = keyScan(&Key_cnt, Key4); // 按键扫描
 212   2      
 213   2              Page_Switching(); // 页面切换
 214   2              switch (Page)
 215   2              {
 216   3              case 1:
 217   3                  tare_weight();        // 去皮
 218   3                  LCD_Display_Weight(); // 显示重量
 219   3                  break;
 220   3              case 2:
 221   3                  Count_weight();
 222   3                  LCD_Display_Count(); // 显示计数
 223   3                  break;
 224   3      
 225   3              default:
 226   3                  LCD1602_Wr_Command(0x01);
 227   3                  break;
 228   3              }
 229   2              P20 = ~P20;
 230   2          }
 231   1      }
 232          
 233          BOOL usb_OUT_callback()
 234          {
 235   1          // 接收字节数保存在OutNumber中
 236   1          // 接收数据保存在UsbOutBuffer缓冲区
 237   1          USB_SendData("ok", 2);
 238   1          return 1;
 239   1      }

C51 COMPILER V9.59.0.0   APP_MAIN                                                          12/23/2024 00:05:48 PAGE 5   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1315    ----
   CONSTANT SIZE    =    169    ----
   XDATA SIZE       =     45    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      4    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
