C51 COMPILER V9.59.0.0   APP_MAIN                                                          12/23/2024 17:50:38 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE APP_MAIN
OBJECT MODULE PLACED IN .\Objects\app_main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE App\app_main.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\App;.\divers
                    -;.\main) DEBUG PRINT(.\Listings\app_main.lst) TABS(2) OBJECT(.\Objects\app_main.obj)

line level    source

   1          #include "app_main.h"
   2          
   3          char *USER_DEVICEDESC = NULL;
   4          char *USER_PRODUCTDESC = NULL;
   5          char *USER_STCISPCMD = "@STCISP#"; // 可以自定义
   6          char LCDstr[15];
   7          BYTE usbStr[64];
   8          
   9          uint weight = 0;            // 显示重量
  10          uint threshold = 0;         // 阈值
  11          uint weight_k = 400;        // 重量系数
  12          uint usb_weight_k = 400;    // 重量系数
  13          uint weight_tare = 0;       // 皮重量
  14          uint weight_tare_after = 0; // 去皮后重量
  15          uint weight_count = 100;    // 计数重量
  16          ulong weight_base = 0;      // 基准重量
  17          ulong poll_neg_t = 0;       // 重量负值时间
  18          ulong weigh_poll_neg_t = 0; // 重量负值时间
  19          ulong beep_net_time = 0;    // 蜂鸣器负值时间
  20          uint poll_beep_time = 1200; // 蜂鸣器轮询时间
  21          uint Weight_difference = 0; // 重量差
  22          
  23          uchar Key1_cnt = 0;  // 按键消抖计数值
  24          uchar Key2_cnt = 0;  // 按键消抖计数值
  25          uchar Key3_cnt = 0;  // 按键消抖计数值
  26          uchar Key4_cnt = 0;  // 按键消抖计数值
  27          BOOL Key1_event = 0; // 按键事件
  28          BOOL Key2_event = 0; // 按键事件
  29          BOOL Key3_event = 0; // 按键事件
  30          BOOL Key4_event = 0; // 按键事件
  31          
  32          char USB_Str[64];
  33          uint Item_Count = 0; // 计数
  34          int Page = 1;        // 页面
  35          
  36          /**
  37           * @brief 初始化I/O端口，将模式寄存器设置为0。
  38           *
  39           * 此函数将所有模式寄存器（P0M0, P0M1, P1M0, P1M1, P2M0, P2M1,
  40           * P4M0, P4M1, P5M0, P5M1, P6M0, P6M1, P7M0, P7M1）设置为0，
  41           * 将所有引脚配置为通用I/O，无特殊功能。
  42           */
  43          void IO_Init()
  44          {
  45   1          P0M0 = 0x00;
  46   1          P0M1 = 0x00;
  47   1          P1M0 = 0x00;
  48   1          P1M1 = 0x00;
  49   1          P2M0 = 0x00;
  50   1          P2M1 = 0x00;
  51   1          P3M0 = 0x00;
  52   1          P3M1 = 0x00;
  53   1          P4M0 = 0x00;
  54   1          P4M1 = 0x00;
C51 COMPILER V9.59.0.0   APP_MAIN                                                          12/23/2024 17:50:38 PAGE 2   

  55   1          P5M0 = 0x00;
  56   1          P5M1 = 0x00;
  57   1          P6M0 = 0x00;
  58   1          P6M1 = 0x00;
  59   1          P7M0 = 0x00;
  60   1          P7M1 = 0x00;
  61   1      }
  62          
  63          /**
  64           * @brief 任务一
  65           * 显示个人信息在LCD1602屏幕上
  66           *
  67           * 该函数LCD1602屏幕上显示个人信息。
  68           * 首先显示学号“20235603023185”，然后延迟500毫秒。
  69           * 接着显示姓名“LinZhiKai”，再延迟2000毫秒。
  70           * 最后清除屏幕显示。
  71           */
  72          void Display_PersonInfo()
  73          {
  74   1          sprintf(LCDstr, "%s", "20235603023185");
  75   1          LCD1602_Display_String(1, 2, LCDstr);
  76   1          DelayTick(500);
  77   1          sprintf(LCDstr, "%s", "LinZhiKai");
  78   1          LCD1602_Display_String(2, 4, LCDstr);
  79   1          DelayTick(2000);
  80   1          LCD1602_Wr_Command(0x01);
  81   1      }
  82          /**
  83           * @brief 任务三
  84           * 显示重量信息在LCD1602屏幕上
  85           *
  86           * 该函数LCD1602屏幕上显示重量信息。
  87           * 首先显示标志和单位“Weight :”，“g”。
  88           * 接着显示重量值“weight”，延迟500毫秒。
  89           * 如果重量值为0，则清除重量值。
  90           */
  91          void LCD_Display_Weight()
  92          {
  93   1      
  94   1          LCD1602_Display_String(1, 1, "Pi :");     // 显示标志
  95   1          LCD1602_Display_String(1, 10, "g");       // 显示单位
  96   1          LCD1602_Display_String(2, 1, "Weight :"); // 显示标志
  97   1          LCD1602_Display_String(2, 15, "g");       // 显示单位
  98   1      
  99   1          sprintf(LCDstr, "%4d", weight_tare);  // 格式化字符串
 100   1          LCD1602_Display_String(1, 5, LCDstr); // LCD显示去皮重量值
 101   1          if (weigh_poll_neg_t + weigh_poll_time < Get_Tikc())
 102   1          {
 103   2              weight_tare_after = read_weight(weight_k, weight_base) - weight_tare; // 读取重量
 104   2              printf("weight_base = %lu\n", weight_base);                           // Log打印基准重量
 105   2              printf("weight = %d\n", weight_tare_after);                           // Log打印重量
 106   2              weigh_poll_neg_t = Get_Tikc();
 107   2          }
 108   1      
 109   1          sprintf(LCDstr, "%4d", weight_tare_after); // 格式化字符串
 110   1          LCD1602_Display_String(2, 10, LCDstr);     // LCD显示重量值
 111   1          if (weight_tare_after <= 0)
 112   1          {
 113   2              LCD1602_Display_String(2, 10, "   0"); // 清除重量值
 114   2          }
 115   1      }
 116          /**
C51 COMPILER V9.59.0.0   APP_MAIN                                                          12/23/2024 17:50:38 PAGE 3   

 117           * @brief 任务三
 118           * 去皮
 119           * 该函数去皮。
 120           */
 121          void tare_weight()
 122          {
 123   1      
 124   1          if (Key3_event == 1 && Page == 1)
 125   1          {
 126   2              weight_tare = read_weight(weight_k, weight_base); // 读取重量
 127   2              printf("weight_tare = %d\n", weight_tare);        // Log打印去皮重量
 128   2          }
 129   1      }
 130          
 131          /**
 132           * @brief 任务四
 133           * 计数
 134           * 该函数计数。
 135           */
 136          void Count_weight()
 137          {
 138   1          if (read_weight(weight_k, weight_base) > 1000)
 139   1          {
 140   2              weight_count = 999;
 141   2          }
 142   1          else
 143   1          {
 144   2              weight_count = read_weight(weight_k, weight_base);
 145   2          }
 146   1      }
 147          
 148          /**
 149           * @brief 任务四
 150           * 显示计数信息在LCD1602屏幕上
 151           *
 152           * 该函数LCD1602屏幕上显示计数信息。
 153           * 首先显示标志“Count :”。
 154           * 接着显示计数值“Item_Count”。
 155           * 如果计数值大于100，则计数值为100。
 156           * 最后显示单位“g”。
 157           */
 158          void LCD_Display_Count()
 159          {
 160   1      
 161   1          LCD1602_Display_String(2, 1, "Weight :"); // 显示标志
 162   1          LCD1602_Display_String(2, 15, "g");       // 显示单位
 163   1          LCD1602_Display_String(1, 1, "Count :");  // 显示标志
 164   1          LCD1602_Display_String(1, 12, "x");       // 显示标志
 165   1          LCD1602_Display_String(1, 16, "g");       // 显示单位
 166   1      
 167   1          if (weigh_poll_neg_t + weigh_poll_time < Get_Tikc())
 168   1          {
 169   2              weight = read_weight(weight_k, weight_base); // 读取重量
 170   2              printf("weight = %d\n", weight);             // Log打印重量值
 171   2              printf("weight_count = %d\n", weight_count); // Log打印计数重量值
 172   2              printf("Item_Count = %d\n", Item_Count);     // Log打印计数值
 173   2              weigh_poll_neg_t = Get_Tikc();
 174   2          }
 175   1          sprintf(LCDstr, "%4d", weight);        // 格式化字符串
 176   1          LCD1602_Display_String(2, 10, LCDstr); // LCD显示重量值
 177   1          if (weight <= 0)
 178   1          {
C51 COMPILER V9.59.0.0   APP_MAIN                                                          12/23/2024 17:50:38 PAGE 4   

 179   2              LCD1602_Display_String(2, 10, "   0"); // 清除重量值
 180   2          }
 181   1      
 182   1          if (weight_count == 0)
 183   1          {
 184   2              LCD1602_Display_String(1, 13, "  0"); // 清除重量值
 185   2              Item_Count = 0;
 186   2          }
 187   1          else
 188   1          {
 189   2              Item_Count = weight / weight_count; // 计数
 190   2          }
 191   1          sprintf(LCDstr, "%3d", weight_count);  // 格式化字符串
 192   1          LCD1602_Display_String(1, 13, LCDstr); // 显示个重量值
 193   1      
 194   1          if (Item_Count >= 100)
 195   1          {
 196   2              Item_Count = 100;
 197   2          }
 198   1          sprintf(LCDstr, "%3d", Item_Count);   // 格式化字符串
 199   1          LCD1602_Display_String(1, 8, LCDstr); // LCD显示计数值
 200   1          if (Item_Count == 0)
 201   1          {
 202   2              LCD1602_Display_String(1, 8, "  0"); // 清除计数值
 203   2          }
 204   1      }
 205          
 206          /**
 207           * @brief 任务五
 208           * 超重报警
 209           * 该函数超重报警。
 210           */
 211          void Overweight_alarm()
 212          {
 213   1      
 214   1          LCD1602_Display_String(2, 1, "Weight :"); // 显示标志
 215   1          weight = read_weight(weight_k, weight_base);
 216   1          sprintf(LCDstr, "%4d", weight);              // 格式化字符串
 217   1          LCD1602_Display_String(2, 10, LCDstr);       // LCD显示重量值
 218   1          LCD1602_Display_String(2, 15, "g");          // 显示单位
 219   1          LCD1602_Display_String(1, 1, "threshold :"); // 显示标志
 220   1          sprintf(LCDstr, "%3d", threshold);           // 格式化字符串
 221   1          LCD1602_Display_String(1, 12, LCDstr);       // 显示标志
 222   1          LCD1602_Display_String(1, 16, "g");          // 显示单位
 223   1          Weight_difference = weight / threshold;      // 计算重量差
 224   1          if (threshold == 0)
 225   1          {
 226   2              Weight_difference = 0;
 227   2          }
 228   1      
 229   1          if (weight > threshold && weight != 0)
 230   1          {
 231   2              if (beep_net_time + poll_beep_time - (weight / (threshold + 50) * 100) < Get_Tikc())
 232   2              {
 233   3                  BEEP = ~BEEP;
 234   3                  LED3 = ~LED3;
 235   3                  LED1 = 0;
 236   3                  printf("weight = %4d\n", weight);
 237   3                  printf("threshold = %3d", threshold);
 238   3                  beep_net_time = Get_Tikc();
 239   3              }
 240   2          }
C51 COMPILER V9.59.0.0   APP_MAIN                                                          12/23/2024 17:50:38 PAGE 5   

 241   1          else
 242   1          {
 243   2              BEEP = 1;
 244   2              LED3 = 1;
 245   2          }
 246   1      }
 247          
 248          /**
 249           * @brief 任务五
 250           * 重量阈值
 251           * 该函数重量阈值。
 252           */
 253          void Weight_threshold(uint k)
 254          {
 255   1          if (k == 1)
 256   1          {
 257   2              threshold++;
 258   2          }
 259   1          else if (k == 2 && threshold > 0)
 260   1          {
 261   2              threshold--;
 262   2          }
 263   1          else if (k == 3)
 264   1          {
 265   2              /* code */
 266   2          }
 267   1          else if (k == 4)
 268   1          {
 269   2              threshold = read_weight(weight_k, weight_base);
 270   2          }
 271   1      }
 272          
 273          /**
 274           * @brief 任务六
 275           * 页面切换
 276           * 该函数页面切换。
 277           */
 278          void Page_Switching()
 279          {
 280   1          LCD1602_Wr_Command(0x01);
 281   1          Page++;
 282   1          if (Page > 3)
 283   1          {
 284   2              Page = 1;
 285   2          }
 286   1      }
 287          
 288          void usb_set_weight_K(BYTE UsbOut[], BYTE *size_t)
 289          {
 290   1          uint i;
 291   1          for (i = 0; i < *size_t; i++)
 292   1          {
 293   2              usbStr[i] = UsbOut[i];
 294   2          }
 295   1          if (usbStr[0] == '#')
 296   1          {
 297   2              usb_weight_k = (usbStr[1] - '0') * 100 + (usbStr[2] - '0') * 10 + (usbStr[3] - '0');
 298   2          }
 299   1          weight_k = usb_weight_k;
 300   1          sprintf(USB_Str, "k = %3d\n", weight_k);
 301   1          USB_SendData(USB_Str, 9); // Log打印重量系数
 302   1      }
C51 COMPILER V9.59.0.0   APP_MAIN                                                          12/23/2024 17:50:38 PAGE 6   

 303          
 304          void app_main()
 305          {
 306   1          // 扩展寄存器(XFR)访问使能
 307   1          P_SW2 |= 0x80;
 308   1          IO_Init(); // 初始化I/O端口
 309   1      
 310   1          usb_init();    // USB初始化
 311   1          Timer0_Init(); // 定时器0初始化
 312   1          EA = 1;        // 开启总中断
 313   1      
 314   1          while (DeviceState != DEVSTATE_CONFIGURED) // 等待USB配置完成
 315   1          {
 316   2          }
 317   1          LCD1602_Init();                   // 初始化LCD1602
 318   1          I2C_Init();                       // 初始化I2C
 319   1          Display_PersonInfo();             // 显示个人信息
 320   1          weight_base = read_weight_base(); // 读取基准重量
 321   1      
 322   1          while (1)
 323   1          {
 324   2              Key1_event = keyScan(&Key1_cnt, !Key1); // 按键扫描
 325   2              Key2_event = keyScan(&Key2_cnt, !Key2); // 按键扫描
 326   2              Key3_event = keyScan(&Key3_cnt, !Key3); // 按键扫描
 327   2              Key4_event = keyScan(&Key4_cnt, !Key4); // 按键扫描
 328   2              if (Key1_event == 1)
 329   2              {
 330   3                  if (Page == 1)
 331   3                  {
 332   4                      /* code */
 333   4                  }
 334   3                  if (Page == 2)
 335   3                  {
 336   4                      Count_weight();
 337   4                  }
 338   3                  if (Page == 3)
 339   3                  {
 340   4                  }
 341   3              }
 342   2              if (Key2_event == 1)
 343   2              {
 344   3                  if (Page == 1)
 345   3                  {
 346   4                      /* code */
 347   4                  }
 348   3                  if (Page == 2)
 349   3                  {
 350   4                      /* code */
 351   4                  }
 352   3                  if (Page == 3)
 353   3                  {
 354   4                  }
 355   3              }
 356   2              if (Key3_event == 1)
 357   2              {
 358   3      
 359   3                  if (Page == 1)
 360   3                  {
 361   4                      tare_weight();
 362   4                  }
 363   3                  if (Page == 2)
 364   3                  {
C51 COMPILER V9.59.0.0   APP_MAIN                                                          12/23/2024 17:50:38 PAGE 7   

 365   4                      /* code */
 366   4                  }
 367   3                  if (Page == 3)
 368   3                  {
 369   4                      Weight_threshold(3);
 370   4                  }
 371   3              }
 372   2              if (Key4_event == 1)
 373   2              {
 374   3      
 375   3                  Page_Switching();
 376   3              }
 377   2      
 378   2              if (poll_neg_t + poll_time < Get_Tikc())
 379   2              {
 380   3      
 381   3                  // printf("Page = %d\n", Page); // Log打印页面
 382   3                  switch (Page)
 383   3                  {
 384   4                  case 1:
 385   4      
 386   4                      LCD_Display_Weight(); // 显示重量
 387   4      
 388   4                      break;
 389   4                  case 2:
 390   4                      LCD_Display_Count(); // 显示计数
 391   4                      break;
 392   4                  case 3:
 393   4                      if (Key1 == 0 && Key2 == 1 && Page == 3)
 394   4                      {
 395   5                          Weight_threshold(1);
 396   5                      }
 397   4                      if (Key2 == 0 && Key1 == 1 && Page == 3)
 398   4                      {
 399   5                          Weight_threshold(2);
 400   5                      }
 401   4                      if (Key1 == 0 && Key2 == 0 && Page == 3)
 402   4                      {
 403   5                          Weight_threshold(4);
 404   5                      }
 405   4                      Overweight_alarm();
 406   4                      break;
 407   4                  default:
 408   4                      LCD1602_Wr_Command(0x01);
 409   4                      break;
 410   4                  }
 411   3                  LED1 = ~LED1;
 412   3                  // LED2 = ~LED2;
 413   3                  // LED3 = ~LED3;
 414   3                  poll_neg_t = Get_Tikc();
 415   3              }
 416   2          }
 417   1      }
 418          
 419          BOOL usb_OUT_callback()
 420          {
 421   1          // 接收字节数保存在OutNumber中
 422   1          // 接收数据保存在UsbOutBuffer缓冲区
 423   1          // USB_SendData("ok", 2);
 424   1      
 425   1          usb_set_weight_K(UsbOutBuffer, &OutNumber); // 设置重量系数
 426   1          return 1;
C51 COMPILER V9.59.0.0   APP_MAIN                                                          12/23/2024 17:50:38 PAGE 8   

 427   1      }
 428          
 429          void I2C_Isr() interrupt 24
 430          {
 431   1          if (I2CMSST & 0x40)
 432   1          {
 433   2              I2CMSST = ~0x40;
 434   2              busy = 0;
 435   2          }
 436   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2444    ----
   CONSTANT SIZE    =    217    ----
   XDATA SIZE       =    194       6
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      5    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
