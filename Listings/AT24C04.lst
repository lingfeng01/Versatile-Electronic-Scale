C51 COMPILER V9.59.0.0   AT24C04                                                           12/25/2024 22:31:59 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE AT24C04
OBJECT MODULE PLACED IN .\Objects\AT24C04.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE divers\AT24C04.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\App;.\dive
                    -rs;.\main) DEBUG PRINT(.\Listings\AT24C04.lst) TABS(2) OBJECT(.\Objects\AT24C04.obj)

line level    source

   1          #include "AT24C04.h"
   2          
   3          /**
   4           * @brief 写入一个字节到AT24C04
   5           *
   6           * @param addr 存储地址
   7           * @param data 要写入的数据
   8           */
   9          void AT24C04_WriteByte(uchar AT24C04_ADDR, uchar addr, uchar SendData)
  10          {
  11   1          I2C_Start();                        // 启动I2C
  12   1          I2C_SendData(AT24C04_ADDR);         // 发送器件地址和写命令
  13   1          Recv_Ack();                         // 接收应答
  14   1          I2C_SendData((addr & 0xFF));        // 发送存储高位地址
  15   1          Recv_Ack();                         // 接收应答
  16   1          I2C_SendData(((addr >> 8) & 0xFF)); // 发送存储低位地址
  17   1          Recv_Ack();                         // 接收应答
  18   1          I2C_SendData(SendData);             // 发送数据
  19   1          Recv_Ack();                         // 接收应答
  20   1          I2C_Stop();                         // 停止I2C
  21   1      }
  22          /**
  23           * @brief 从AT24C04读取一个字节
  24           *
  25           * @param addr 存储地址
  26           * @return uchar 读取的数据
  27           */
  28          uchar AT24C04_ReadByte(uchar AT24C04_ADDR, uchar addr)
  29          {
  30   1          uchar ReadData;
  31   1          I2C_Start();                        // 启动I2C
  32   1          I2C_SendData(AT24C04_ADDR);         // 发送器件地址和写命令
  33   1          Recv_Ack();                         // 接收应答
  34   1          I2C_SendData((addr & 0xFF));        // 发送存储高位地址
  35   1          Recv_Ack();                         // 接收应答
  36   1          I2C_SendData(((addr >> 8) & 0xFF)); // 发送存储低位地址
  37   1          Recv_Ack();                         // 接收应答
  38   1          I2C_Start();                        // 重新启动I2C
  39   1          I2C_SendData(AT24C04_ADDR | 0x01);  // 发送器件地址和读命令
  40   1          Recv_Ack();                         // 接收应答
  41   1          ReadData = I2C_RecvData();          // 读取数据
  42   1          I2C_SendNAck();                     // 主机非应答
  43   1          I2C_Stop();                         // 停止I2C
  44   1          return ReadData;
  45   1      }
  46          
  47          /**
  48           * @brief 页写入方式
  49           * @brief 写入多个字节到AT24C04
  50           * @param addr 起始存储地址
  51           * @param SendData 要写入的数据缓冲区
  52           * @param length 要写入的数据长度
  53           */
  54          void AT24C04_WritePage(uchar AT24C04_ADDR, uchar addr, uchar *SendData)
C51 COMPILER V9.59.0.0   AT24C04                                                           12/25/2024 22:31:59 PAGE 2   

  55          {
  56   1          uchar length = sizeof(SendData);
  57   1          uchar i;
  58   1          I2C_Start();                                                     // 启动I2C
  59   1          I2C_SendData(AT24C04_ADDR | 0x00 | (((addr >> 8) & 0x07) << 1)); // 发送器件地址和写命令
  60   1          Recv_Ack();                                                      // 接收应答
  61   1          I2C_SendData((addr & 0xFF));                                     // 发送存储低位地址
  62   1          Recv_Ack();                                                      // 接收应答
  63   1          for (i = 0; i < length; i++)
  64   1          {
  65   2              I2C_SendData(SendData[i]); // 发送数据
  66   2              Recv_Ack();                // 接收应答
  67   2          }
  68   1          I2C_Stop(); // 停止I2C
  69   1      }
  70          
  71          /**
  72           * @brief 页读取方式
  73           * @brief 从AT24C04读取一页数据
  74           * @param addr 起始存储地址
  75           * @param ReadData 读取数据缓冲区
  76           * @param length 读取数据长度
  77           */
  78          void AT24C04_ReadPage(uchar AT24C04_ADDR, uchar addr, uchar *ReadData, uchar length)
  79          {
  80   1          uchar i;
  81   1          I2C_Start();                                                     // 启动I2C
  82   1          I2C_SendData(AT24C04_ADDR | 0x00 | (((addr >> 8) & 0x07) << 1)); // 发送器件地址和读命令
  83   1          Recv_Ack();                                                      // 接收应答
  84   1          I2C_SendData((addr & 0xFF));                                     // 发送存储低位地址
  85   1          Recv_Ack();                                                      // 接收应答
  86   1          I2C_Start();                                                     // 重新启动I2C
  87   1          I2C_SendData(AT24C04_ADDR | 0x01);                               // 发送器件地址和读命令
  88   1          Recv_Ack();                                                      // 接收应答
  89   1      
  90   1          for (i = 0; i < length; i++)
  91   1          {
  92   2              *(ReadData + i) = I2C_RecvData(); // 读取数据
  93   2              I2C_SendAck();                    // 主机应答
  94   2          }
  95   1          I2C_SendNAck(); // 主机非应答
  96   1          I2C_Stop();     // 停止I2C
  97   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    371    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      20
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
